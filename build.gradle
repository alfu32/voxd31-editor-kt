buildscript {
    ext.kotlinVersion = '1.9.21'

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

    }
}

allprojects {
    apply plugin: "eclipse"

    plugins.withId('java') {
        // Set source and target compatibility based on a project property or default to Java 17
        def javaVersion = project.hasProperty('javaCompatVersion') ? project.property('javaCompatVersion') : '17'
        sourceCompatibility = JavaVersion.toVersion(javaVersion)
        targetCompatibility = JavaVersion.toVersion(javaVersion)
    }

    version = '1.0'
    ext {
        appName = "voxd31-editor"
        gdxVersion = '1.12.1'
        roboVMVersion = '2.3.20'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'

        junitVersion = '4.13.1'
        junitJupiterVersion = '5.8.1'
        mokitoCoreVersion = '5.11.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
        maven {
            url 'https://maven.enginehub.org/repo/'
        }
    }
}

project(":core-ui") {
    apply plugin: "kotlin"


    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        // // https://mvnrepository.com/artifact/com.sk89q.worldedit/worldedit-bukkit
        // api "com.sk89q.worldedit:worldedit-bukkit:7.2.20"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        api 'org.simpleframework:simple-xml:2.7.1'
        // Kotlin scripting dependencies
        api "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:$kotlinVersion"
        api "org.jetbrains.kotlin:kotlin-scripting-common:$kotlinVersion"
        api "org.jetbrains.kotlin:kotlin-scripting-jvm:$kotlinVersion"
        api "org.jetbrains.kotlin:kotlin-scripting-jvm-host:$kotlinVersion"

        testImplementation "junit:junit:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"
        testImplementation "org.mockito:mockito-core:$mokitoCoreVersion"
    }

    test {
        useJUnitPlatform()
    }
}
project(":desktop") {
    apply plugin: "kotlin"


    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"

        testImplementation "junit:junit:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"
        testImplementation "org.mockito:mockito-core:$mokitoCoreVersion"
    }

    test {
        useJUnitPlatform()
    }
}

project(":core") {
    apply plugin: "kotlin"


    dependencies {
        implementation project(':core-ui')
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        // // https://mvnrepository.com/artifact/com.sk89q.worldedit/worldedit-bukkit
        // api "com.sk89q.worldedit:worldedit-bukkit:7.2.20"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"

        testImplementation "junit:junit:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"
        testImplementation "org.mockito:mockito-core:$mokitoCoreVersion"
    }

    test {
        useJUnitPlatform()
    }
}

project(":core-testing") {
    apply plugin: "kotlin"

    sourceSets.test.java.srcDirs = ["src/test/kotin"]

    dependencies {

        /**
         * If you do have some classes to test in os specific code you may want to uncomment
         * some of these lines.
         *
         * BUT: I recommend to create seperate test sub projects for each platform. Trust me :)
         *
         */

//        compile project(":android")
//        compile project(":html")
//        compile project(":desktop")


//        if(System.getProperty("os.name").toLowerCase().indexOf("mac") >= 0) {
//        	compile project(":ios")
//        }

        implementation project(":core")
        implementation project(":core-ui")

        implementation  "junit:junit:$junitVersion"
        implementation "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"
        implementation "org.mockito:mockito-core:$mokitoCoreVersion"

        implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"

        testImplementation "junit:junit:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"
        testImplementation "org.mockito:mockito-core:$mokitoCoreVersion"

        testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}
